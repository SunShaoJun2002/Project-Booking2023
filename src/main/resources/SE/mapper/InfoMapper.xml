<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="SE.mapper.InfoMapper">
    <!--
    <resultMap id="Image" type="SE.pojo.Image">
        <id column="imgId" property="imgId" jdbcType="DECIMAL" />
        <result column="pic" property="pic" jdbcType="BLOB" />
    </resultMap>
    <insert id="testInsertPic" parameterType="SE.pojo.Image">
        insert into image (imgId,pic) values(#{imgId},#{pic})
    </insert>-->
    <select id="testSearch" resultType="SE.pojo.Info">
        select * from info where id in
        (
        (select A.hotel_id from
        (select hotel_id, sum(room_num) as room_num from rooms group by hotel_id)
        as A,
        (select hotel_id, count(hotel_id) as room_num from records where check_in_date&lt;='2023-1-1' or check_out_date>='2023-1-3' group by hotel_id)
        as B
        where A.hotel_id=B.hotel_id and A.room_num - B.room_num>=33
        )
        union
        (
        select A.hotel_id from
        (select hotel_id, sum(room_num) as room_num from rooms group by hotel_id) A
        where
        A.hotel_id not in
        (select hotel_id from records where check_in_date&lt;='2023-1-1' or check_out_date>='2023-1-3' and A.room_num>=33)
        )
        )
    </select>


    <select id="selectContentHotelEasy" resultType="SE.pojo.Info">
        select * from info
        <where>
            <if test="Province != null">
                province=#{Province}
            </if>
            <if test="RoomNum != null and StartDate != null and EndDate != null">
                and id in <!-- 查找所有在（1）可用时间段内（2）空余房间数大于RoomNum的hotel_id集合 -->
                (
                    (
                        select A.hotel_id
                        from
                            (select hotel_id, sum(room_num) as room_num from rooms group by hotel_id)
                        as A,
                            (
                            select hotel_id, count(hotel_id) as room_num
                            from records
                            where check_in_date&lt;=#{EndDate} or check_out_date>=#{StartDate} group by hotel_id
                            )
                        as B
                        where A.hotel_id=B.hotel_id and A.room_num - B.room_num>=#{RoomNum}
                    )
                    union
                    (
                        select A.hotel_id
                        from
                            (select hotel_id, sum(room_num) as room_num from rooms group by hotel_id) A
                        where
                            A.hotel_id not in
                                (select hotel_id from records where check_in_date&lt;=#{EndDate} or check_out_date>=#{StartDate})
                        and
                            A.room_num>=#{RoomNum}
                    )
                )
            </if>
        </where>
    </select>

    <select id="selectContentHotel" resultType="SE.pojo.Info">
        select * from info
        <where>
            <if test="Province != null">
                (province like #{Province} or hotel_name like #{Province} or region like #{Province} or address like #{Province})
            </if>
            <choose>
                <when test="RoomDesc != null and RoomNum != null and StartDate != null and EndDate != null">
                    and id in <!-- 查找所有在（1）可用时间段内（2）房间类型等于所需的房间类型（3）空余房间数大于RoomNum的hotel_id集合 -->
                    (
                    (select A.hotel_id
                    from
                    (select hotel_id, sum(room_num) as room_num from rooms where usable_desc=#{RoomDesc} group by hotel_id) A,
                    (select D.hotel_id, sum(D.room_num) as room_num from recorddetail as D where D.room_id in
                    (select room_id from rooms as F where F.hotel_id=D.hotel_id and F.usable_desc=#{RoomDesc})
                    and D.check_in_date&lt;=#{EndDate} and D.check_out_date>=#{StartDate} group by D.hotel_id) B
                    where
                    A.hotel_id=B.hotel_id and A.room_num-B.room_num>=#{RoomNum})
                    union
                    (select A.hotel_id
                    from
                    (select hotel_id, sum(room_num) as room_num from rooms where usable_desc=#{RoomDesc} group by hotel_id) A
                    where
                    A.hotel_id not in
                    (select distinct D.hotel_id from recorddetail as D where D.room_id in
                    (select room_id from rooms as F where F.hotel_id=D.hotel_id and F.usable_desc=#{RoomDesc}) and D.check_in_date&lt;=#{EndDate} and D.check_out_date>=#{StartDate})
                    and A.room_num>=#{RoomNum})
                    )
                </when>
                <when test="RoomDesc != null and RoomNum != null">
                    and id in
                    (select hotel_id from (select hotel_id,sum(room_num) as n from rooms where usable_desc=#{RoomDesc} group by hotel_id) A where A.n>=#{RoomNum})
                </when>
            </choose>
        </where>
    </select>

    <delete id="deleteAll">
        delete from testdbconnection
    </delete>

    <insert id="insertContentHotel">
        insert into testdbconnection (hotel_id)
        select id as hotel_id from info
        <where>
            <if test="Province != null">
                (province like #{Province} or hotel_name like #{Province} or region like #{Province} or address like #{Province})
            </if>
            <choose>
                <when test="RoomDesc != null and RoomNum != null and StartDate != null and EndDate != null">
                    and id in <!-- 查找所有在（1）可用时间段内（2）房间类型等于所需的房间类型（3）空余房间数大于RoomNum的hotel_id集合 -->
                    (
                    (select A.hotel_id
                    from
                    (select hotel_id, sum(room_num) as room_num from rooms where usable_desc=#{RoomDesc} group by hotel_id) A,
                    (select D.hotel_id, sum(D.room_num) as room_num from recorddetail as D where D.room_id in
                    (select room_id from rooms as F where F.hotel_id=D.hotel_id and F.usable_desc=#{RoomDesc})
                    and D.check_in_date&lt;=#{EndDate} and D.check_out_date>=#{StartDate} group by D.hotel_id) B
                    where
                    A.hotel_id=B.hotel_id and A.room_num-B.room_num>=#{RoomNum})
                    union
                    (select A.hotel_id
                    from
                    (select hotel_id, sum(room_num) as room_num from rooms where usable_desc=#{RoomDesc} group by hotel_id) A
                    where
                    A.hotel_id not in
                    (select distinct D.hotel_id from recorddetail as D where D.room_id in
                    (select room_id from rooms as F where F.hotel_id=D.hotel_id and F.usable_desc=#{RoomDesc}) and D.check_in_date&lt;=#{EndDate} and D.check_out_date>=#{StartDate})
                    and A.room_num>=#{RoomNum})
                    )
                </when>
                <when test="RoomDesc != null and RoomNum != null">
                    and id in
                    (select hotel_id from (select hotel_id,sum(room_num) as n from rooms where usable_desc=#{RoomDesc} group by hotel_id) A where A.n>=#{RoomNum})
                </when>
            </choose>
        </where>
    </insert>

    <select id="countNum" resultType="java.lang.Integer">
        select count(id) from (select A.id from ${Table} as A, testdbconnection as B where ${Field} like #{Value} and A.id=B.hotel_id) C
    </select>

    <update id="reset">
        update testdbconnection set `condition`=1
    </update>

    <update id="selectFacility">
        update testdbconnection set `condition`=0 where hotel_id not in (select id as hotel_id from feature where
        <if test="Facilities0!=null">
            facility_list like #{Facilities0}
        </if>
        <if test="Facilities1!=null">
            or facility_list like #{Facilities1}
        </if>
        <if test="Facilities2!=null">
            or facility_list like #{Facilities2}
        </if>
        <if test="Facilities3!=null">
            or facility_list like #{Facilities3}
        </if>
        <if test="Facilities4!=null">
            or facility_list like #{Facilities4}
        </if>
        <if test="Facilities5!=null">
            or facility_list like #{Facilities5}
        </if>
        <if test="Facilities6!=null">
            or facility_list like #{Facilities6}
        </if>
        <if test="Facilities7!=null">
            or facility_list like #{Facilities7}
        </if>
        )
    </update>

    <update id="selectStarRating">
        update testdbconnection set `condition`=0 where hotel_id not in (select id as hotel_id from info where
        <if test="Star0!=null">
            star_rating=#{Star0}
        </if>
        <if test="Star1!=null">
            or star_rating=#{Star1}
        </if>
        <if test="Star2!=null">
            or star_rating=#{Star2}
        </if>
        <if test="Star3!=null">
            or star_rating=#{Star3}
        </if>
        <if test="Star4!=null">
            or star_rating=#{Star4}
        </if>
        <if test="Star5!=null">
            or star_rating=#{Star5}
        </if>
        )
    </update>

    <update id="selectGoodLocation">
        update testdbconnection set `condition`=0 where hotel_id in (select id as hotel_id from feature where feature='NULL')
    </update>

    <update id="selectBreakfast">
        update testdbconnection set `condition`=0 where hotel_id in (select id as hotel_id from feature where breakfast='NULL')
    </update>

    <update id="selectRating">
        update testdbconnection set `condition`=0 where hotel_id not in (select id as hotel_id from info where
        <if test="Rate0!=null">
            (rating>=#{Rate0} and rating&lt;=#{Rate0}+1)
        </if>
        <if test="Rate1!=null">
            or (rating>=#{Rate1} and rating&lt;=#{Rate1}+1)
        </if>
        <if test="Rate2!=null">
            or (rating>=#{Rate2} and rating&lt;=#{Rate2}+1)
        </if>
        <if test="Rate3!=null">
            or (rating>=#{Rate3} and rating&lt;=#{Rate3}+1)
        </if>
        )
    </update>

    <select id="countOne" resultType="java.lang.Integer">
        select count(hotel_id) from testdbconnection where `condition`=1
    </select>
    <select id="selectOne" resultType="SE.pojo.Info">
        select A.* from info as A, testdbconnection as B where B.`condition`=1 and A.id=B.hotel_id
    </select>
    <select id="selectById" resultType="SE.pojo.Info">
        select * from info where id=#{id}
    </select>

</mapper>